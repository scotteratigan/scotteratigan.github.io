{"version":3,"sources":["Project.js","App.js","serviceWorker.js","index.js"],"names":["ProjectImage","props","react_default","a","createElement","className","concat","displayOrder","href","link","target","rel","src","imgSrc","alt","ProjectDescription","title","description","Project","imageFirst","index","Fragment","Project_ProjectImage","Project_ProjectDescription","projects","App","Navbar_default","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav_default","Link","name","map","p","src_Project","key","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.21f19d02.chunk.js","sourcesContent":["import React from 'react';\r\n// import img1 from './images/01.jpg';\r\n\r\nconst Project = props => {\r\n\tconst imageFirst = props.index % 2 === 0 ? true : false;\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className='container'>\r\n\t\t\t\t<div className='row align-items-center'>\r\n\t\t\t\t\t{/* {props.index} */}\r\n\t\t\t\t\t<ProjectImage link={props.link} imgSrc={props.imgSrc} displayOrder={imageFirst ? 'order-1' : 'order-3'} />\r\n\t\t\t\t\t<ProjectDescription title={props.title} description={props.description} />\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst ProjectImage = props => {\r\n\treturn (\r\n\t\t<div className={`col-md-6 ${props.displayOrder}`}>\r\n\t\t\t<div className='p-5'>\r\n\t\t\t\t<a href={props.link} target='_blank' rel='noopener noreferrer'>\r\n\t\t\t\t\t<img className='img-fluid img-thumbnail' src={'/images/' + props.imgSrc} alt='' />\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nconst ProjectDescription = props => {\r\n\treturn (\r\n\t\t<div className='col-md-6 order-2'>\r\n\t\t\t<div className='p-5'>\r\n\t\t\t\t<h2 className='display-4'>{props.title}</h2>\r\n\t\t\t\t<p>{props.description}</p>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n\r\n}\r\n\r\nexport default Project;","import React, { Component } from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css'; //bootstrap/dist/css/bootstrap.min.css\n// import { Button } from 'reactstrap';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Project from './Project';\n// import ScrollableAnchor from 'react-scrollable-anchor'\n// import NavDropdown from 'react-bootstrap/NavDropdown';\n// import Form from 'react-bootstrap/Form';\n// import FormControl from 'react-bootstrap/FormControl';\n// import Button from 'react-bootstrap/Button';\n\nconst projects = [\n  {\n    title: 'Virtually Vested',\n    description: 'A Full Stack React App that simulates stock trades. Prices are pulled in real-time. Utilizes MongoDB, Auth0, API caching, and more.',\n    imgSrc: 'virtuallyvested.png',\n    link: 'https://virtuallyvested.herokuapp.com/'\n  },\n  {\n    title: 'Warriors Memory Game',\n    description: 'A lightweight React app exploring state and components.',\n    imgSrc: 'memorygame.png',\n    link: 'https://scotteratigan.github.io/click-game/'\n  },\n  {\n    title: 'NPR Scraper & Notater',\n    description: 'Read and take notes on top stories. A webscraping app using Express, Mongoose, Cheerio, Axios, Bootstrap, Morgan, Chai, and more.',\n    imgSrc: 'nprscraper.png',\n    link: 'https://derivative-daily.herokuapp.com/'\n  },\n  {\n    title: 'Google Book Buddy',\n    description: 'A full-stack React app utilizing the Google Books API.',\n    imgSrc: 'googlebookbuddy.png',\n    link: 'https://scotts-google-book-search.herokuapp.com/'\n  },\n  {\n    title: 'Bike Shepherd',\n    description: 'Help protect yourself from bike theft. A collaborative project using Express, Passport, bCrypt, JawsDB, Sequelize, Handlebars and more',\n    imgSrc: 'bikeshepherd.png',\n    link: 'https://bike-shepherd.herokuapp.com/'\n  },\n  {\n    title: 'Friend Finder',\n    description: 'A full-stack survey app to match you to the person with the most similar interests.',\n    imgSrc: 'friendfinder.png',\n    link: 'https://scotts-friend-finder.herokuapp.com/'\n  },\n  {\n    title: 'Node SQL Storefront',\n    description: 'A console-based storefront with customer and manager access, with full CRUD support. Manager view utilizes promises extensively.',\n    imgSrc: 'nodesqlzon.png',\n    link: 'https://github.com/scotteratigan/nodesqlzon/blob/master/README.md'\n  },\n  {\n    title: 'LIRI Bot',\n    description: 'Uses multiple APIs to request and display data, and log to file. Also downloads and plays Spotify song previews.',\n    imgSrc: 'liri.png',\n    link: 'https://github.com/scotteratigan/liri/blob/master/README.md'\n  },\n  {\n    title: 'Enthusiastic Gifs in a Giffy',\n    description: 'Uses jQuery and the Giffy API to generate still images that can be animated by clicking. Captions display on hover.',\n    imgSrc: 'gifsinajiffy.png',\n    link: 'https://scotteratigan.github.io/GifsinaJiffy/'\n  },\n  {\n    title: 'Marvelous Meme Creation App',\n    description: 'A colloaborative project. Uses the Marvel API to retrieve images, Firebase to store and retrieve image SRC and caption, and the browser to \"speak\" the meme.',\n    imgSrc: 'marvelousmemes.png',\n    link: 'https://rhoang57.github.io/Team7/'\n  },\n  {\n    title: 'Yo Dawg JavaScript Trivia',\n    description: 'A JavaScript trivia game, written in JavaScript. Naturally, Xzibit themed. Uses jQuery, complex objects, this, and setTimeout.',\n    imgSrc: 'javascripttrivia.png',\n    link: 'https://scotteratigan.github.io/TriviaGame/'\n  },\n  {\n    title: 'Fantasy RPG',\n    description: 'Objects, object constructors, dynamic HTML elements, and more. Every game is potentially winnable, in the correct order.',\n    imgSrc: 'rpg.png',\n    link: 'https://scotteratigan.github.io/unit-4-game/'\n  },\n  {\n    title: 'Hipster Hangman',\n    description: 'A modern twist on the classic game. Explores keyboard/mouse events, sound, and dynamically updated HTML content.',\n    imgSrc: 'hangman.png',\n    link: 'https://scotteratigan.github.io/WordGuessGame/'\n  },\n\n]\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=''>\n        <Navbar bg='light' expand='lg'>\n          <Navbar.Brand href='https://scotteratigan.github.io/'>Scott E</Navbar.Brand>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='mr-auto'>\n              <Nav.Link href='#portfolio'>Portfolio</Nav.Link>\n              <Nav.Link href='https://www.linkedin.com/in/scotteratigan/'>LinkedIn</Nav.Link>\n              <Nav.Link href='https://scotteratigan.github.io/'>GitHub</Nav.Link>\n              <Nav.Link href='#contact'>Contact Me</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <header className='masthead text-center text-white'>\n          <div className='masthead-content'>\n            <div className='container'>\n              <h1 className='masthead-heading mb-0'>Full Stack Web Developer</h1>\n              <h2 className='masthead-subheading mb-0'>Will Code for Food</h2>\n              <a href='#portfolio' className='btn btn-primary btn-xl rounded-pill mt-5'>View Portfolio</a>\n            </div>\n          </div>\n          <div className='bg-circle-1 bg-circle'></div>\n          <div className='bg-circle-2 bg-circle'></div>\n          <div className='bg-circle-3 bg-circle'></div>\n          <div className='bg-circle-4 bg-circle'></div>\n        </header>\n        <main>\n          <a href='#portfolio' name='portfolio'> </a>\n          {projects.map((p, index) => (\n            <Project key={index} index={index}\n              title={p.title}\n              description={p.description}\n              imgSrc={p.imgSrc}\n              link={p.link}\n            />))}\n\n        </main>\n        <footer className='py-5 bg-dark text-white text-center'>\n          <a href='#contact' name='contact'> </a>\n          <h1 className='my-3'>Contact Me</h1>\n          <h2 className='my-3'>Email: <a className='text-white' href='mailto:scotteratigan@gmail.com'>scotteratigan@gmail.com</a></h2>\n          <div className='container'>\n            <div className='small'>\n              Copyright &copy; Scott E Ratigan 2019\n              </div>\n          </div>\n\n        </footer>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}